lk.

(* Proof of stash *)

declare A,B : bool.
declare ax: (A).
declare stashed: (A -> B).
theorem stash: (A -> (A -> B) -> A).
elim pop.
elim stashed.
cut (A->B) stash.
axiom.
elim.
axiom.
cut (A) affine.
axiom.
axiom.
qed.
export natural language.


(*Simple Logic Example*)

declare EfficientMetro, StrikeMetro, UseMetro: bool.
declare r1: (EfficientMetro -> UseMetro).
declare r2: (StrikeMetro -> ~EfficientMetro).
declare a1: (EfficientMetro).
declare a2: (StrikeMetro).

theorem arg1: (UseMetro).
cut (EfficientMetro -> UseMetro) th.
axiom r1.
elim.
axiom a1.
axiom.
qed.

theorem arg2: (~EfficientMetro).
cut (StrikeMetro -> ~EfficientMetro) th.
axiom r2.
elim.
axiom a2.
axiom.
qed.

theorem inconsistency: (false).
cut (EfficientMetro) th.
axiom a1.
cut (~EfficientMetro) th2.
axiom arg2.
elim.
axiom.
qed.
